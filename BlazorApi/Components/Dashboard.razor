@using BlazorApi.Models
@using BlazorApi.Services
@inject ApiService Api
@inject IJSRuntime JS

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6">
        <div class="download-card">
            <h2>Memes</h2>
            <div class="row">
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    Total memes: @_memesStats.MemesCount
                </div>
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    JPGs: @_memesStats.JpgCount
                </div>
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    WEBPs: @_memesStats.WebpCount
                </div>
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    Videos: @_memesStats.VideosCount
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-6 col-xl-6">
        <div class="download-card">
            <h2>Tags</h2>
            <div class="row">
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    Total tags: @_tagsesStats.TagCount
                </div>
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    1st: 
                </div>
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    2nd: 
                </div>
                <div class="col-sm-12 col-md-6 col-lg-4 col-xl-3">
                    3rd: 
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    MemesStatsDto _memesStats = new();
    TagsStatsDto _tagsesStats = new();

    protected override async Task OnInitializedAsync()
    {
        var (memesMsg, memeStats) = await Api.GetMemeStatsAsync();
        if (memeStats == null)
        {
            await JS.InvokeVoidAsync("alert", memesMsg);
            return;
        }

        _memesStats = memeStats;

        var (tagsMsg, tagsStats) = await Api.GetTagsStatsAsync();
        if (tagsStats == null)
        {
            await JS.InvokeVoidAsync("alert", tagsMsg);
            return;
        }

        _tagsesStats = tagsStats;
    }
}